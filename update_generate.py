# –î–æ—Ä–∞–±–æ—Ç–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –∑–∞–¥–∞—á—É. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –∫–æ—Ç–æ—Ä–∞—è –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ñ–∞–π–ª—ã —Å —Ä–∞–∑–Ω—ã–º–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è–º–∏. –†–∞—Å—à–∏—Ä–µ–Ω–∏—è –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤ —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã—Ö —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π –º–æ–∂–µ—Ç –±—ã—Ç—å –ª—é–±—ã–º. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω–æ. –í–Ω—É—Ç—Ä–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –ø—Ä–æ—à–ª–æ–π –∑–∞–¥–∞—á–∏.

import os
import random
import string

def generate_files(
    extension: str,
    min_name_len: int = 6,
    max_name_len: int = 30,
    min_bytes: int = 256,
    max_bytes: int = 4096,
    file_count: int = 42
):
    """–°–æ–∑–¥–∞—ë—Ç —Ñ–∞–π–ª—ã —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º, —Å–ª—É—á–∞–π–Ω—ã–º–∏ –∏–º–µ–Ω–∞–º–∏ –∏ —Å–ª—É—á–∞–π–Ω—ã–º —Å–æ–¥–µ—Ä–∂–∏–º—ã–º."""
    for _ in range(file_count):
        name_length = random.randint(min_name_len, max_name_len)
        file_name = ''.join(random.choices(string.ascii_letters, k=name_length)) + '.' + extension
        file_size = random.randint(min_bytes, max_bytes)
        with open(file_name, 'wb') as f:
            f.write(os.urandom(file_size))
        print(f"–°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: {file_name} ({file_size} –±–∞–π—Ç)")

def generate_multiple_extensions(
    extensions_with_counts: dict,
    min_name_len: int = 6,
    max_name_len: int = 30,
    min_bytes: int = 256,
    max_bytes: int = 4096
):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ñ–∞–π–ª—ã —Å —Ä–∞–∑–Ω—ã–º–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è–º–∏.

    :param extensions_with_counts: –°–ª–æ–≤–∞—Ä—å —Ñ–æ—Ä–º–∞—Ç–∞ {'txt': 3, 'bin': 5, 'csv': 2}, 
                                   –≥–¥–µ –∫–ª—é—á ‚Äî —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ, –∑–Ω–∞—á–µ–Ω–∏–µ ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤.
    :param min_name_len: –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞.
    :param max_name_len: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞.
    :param min_bytes: –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –≤ –±–∞–π—Ç–∞—Ö.
    :param max_bytes: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –≤ –±–∞–π—Ç–∞—Ö.
    """
    for extension, count in extensions_with_counts.items():
        print(f"\nüîî –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º: .{extension} (–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {count})")
        generate_files(
            extension=extension,
            min_name_len=min_name_len,
            max_name_len=max_name_len,
            min_bytes=min_bytes,
            max_bytes=max_bytes,
            file_count=count
        )


if __name__ == '__main__':
    extensions = {
        'txt': 3,  # 3 —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–∞
        'bin': 2,  # 2 –±–∏–Ω–∞—Ä–Ω—ã—Ö —Ñ–∞–π–ª–∞
        'csv': 4   # 4 CSV-—Ñ–∞–π–ª–∞
    }

    generate_multiple_extensions(
        extensions_with_counts=extensions,
        min_name_len=8,
        max_name_len=12,
        min_bytes=512,
        max_bytes=1024
    )
